% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AsynchronousAdvantageActorCritic.R
\name{Get.Def.Par.Neural.Network.A3C}
\alias{Get.Def.Par.Neural.Network.A3C}
\title{Get Default Parameters of the Feed-Forward Neural Network for the A3C implementation.}
\usage{
Get.Def.Par.Neural.Network.A3C()
}
\description{
Returns a list with default Parameters which could be used as the \code{model.par} argument: \itemize{
\item \strong{name} Name of the network. Used to identify the type of network.
\item \strong{setup} Function to create the neural network. Default case: \code{Setup.Neural.Network.A3C}.
\item \strong{predict} Function predicts values based on the neural network. Default case: \code{Predict.Neural.Network.A3C}
\item \strong{hidden.nodes} Vector containing the number of neurons of each network layer. 
\item \strong{activation.hidden} Specifies the activation function of the neurons in each hidden layer.
\item \strong{activation.output} Specifies the activation functions in the output layer.
\item \strong{c.value} Importance of Value loss in the total loss of the network. By Default 0.5.
\item \strong{c.entropy} Importance of Entropy loss in the total loss of the network. By Default 0.02.
\item \strong{Optimizer} Specifies the used Optimizer and the learning rate. Default Case: Adam Optimizer with a learning rate of 0.005.
\item \strong{decay} 
\item \strong{clip.norm} The global norm of the gradients at which they are clipped. Prevents really large weight updates.
}
}
