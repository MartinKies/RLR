# Generated by roxygen2: do not edit by hand

S3method(expand,runif.grid)
export(Act.A3C)
export(Act.QLearningPersExpPath)
export(Action.2.Choice.PD)
export(Action.Encoding.Info.Hotelling)
export(Action.Encoding.Info.PD)
export(Advantage.function)
export(Calc.R.phi)
export(Calc.Rho)
export(Change.Algo.Var.QLearningPersExpPath)
export(Choice.2.Action.PD)
export(Convert.2.train)
export(Define_Graph)
export(Define_Graph_Gradient_Update)
export(Discounted.Reward.PD)
export(Encode.Game.States.PD)
export(Encoding.Harper.PD)
export(Encoding.Main.real.PD)
export(Encoding.Manager.PD)
export(Encoding.Slim.TenTen.PD)
export(Encoding.TenTen.PD)
export(Encoding.TimeSeries.flexible.PD)
export(Encoding.TimeSeries.minimal.PD)
export(Encoding.XGBoost.Main.PD)
export(Encoding.XGBoost.Main.real.short20.PD)
export(Encoding.full.compact.PD)
export(Encoding.full.zero.PD)
export(Encoding.last.X.rounds.PD)
export(Encoding.last.round.PD)
export(Encoding.last.three.rounds.PD)
export(Encoding.main.PD)
export(Encoding.maximum.full.Ten.PD)
export(Encoding.static.end.Ten.PD)
export(Extend.Memory.QLearningPersExpPath)
export(External.Eval.PD)
export(Generate.Start.State.Hotelling)
export(Generate.Start.State.PD)
export(Generate.Start.State.Simple.Game)
export(Get.Def.Par.A3C)
export(Get.Def.Par.Neural.Network)
export(Get.Def.Par.Neural.Network.A3C)
export(Get.Def.Par.Neural.Network.A3C.LSTM)
export(Get.Def.Par.QLearningPersExpPath)
export(Get.Def.Par.RFWager)
export(Get.Def.Par.RNN)
export(Get.Def.Par.XGBoost)
export(Get.Feature.List.Encoding.Status.PD)
export(Get.Full.Encoding.Status.PD)
export(Get.Game.Object.Hotelling)
export(Get.Game.Object.PD)
export(Get.Game.Object.Simple.Game)
export(Get.Game.Param.Hotelling)
export(Get.Game.Param.PD)
export(Get.Par.Hotelling)
export(Get.Par.PD)
export(Get.Par.Simple.Game)
export(Initialise.A3C)
export(Initialise.QLearningPersExpPath)
export(Memory.Random.Play.PD)
export(Memory.Self.Play.PD)
export(Model.strat.Main.real.Exp.Path)
export(Model.strat.NN.Main.real.Exp.Path)
export(Model.strat.RNN.TimeSeries.flexible)
export(Model.strat.RNN.TimeSeries.minimal)
export(Model.strat.XGBoost.Main.real.Exp.Path.short20)
export(Model.strat.maximum.full.Ten)
export(NN.strat.Slim.TenTen)
export(NN.strat.Slim.TenTen.QLearning)
export(NN.strat.full.zero)
export(NN.strat.main)
export(NN.strat.static.end.Ten)
export(PID.controller)
export(Play.Multiple.Games.QLearningPersExpPath)
export(Play.On.Strategy.QLearningPersExpPath)
export(Predict.Neural.Network)
export(Predict.Neural.Network.A3C)
export(Predict.RFWager)
export(Predict.RNN)
export(Predict.XGBoost)
export(Q.on.hist.PD.QLearning)
export(Replay.QLearningPersExpPath)
export(Setup.Neural.Network)
export(Setup.Neural.Network.A3C)
export(Setup.Neural.Network.A3C.LSTM)
export(Setup.QLearningPersExpPath)
export(Setup.RFWager)
export(Setup.RNN)
export(Setup.XGBoost)
export(Start.Phi.Table)
export(State.2.Array.Hotelling)
export(State.2.Array.PD)
export(State.2.Array.Simple.Game)
export(State.Transition.Hotelling)
export(State.Transition.PD)
export(State.Transition.Simple.Game)
export(Train.A3c)
export(Train.Neural.Network)
export(Train.On.Memory.QLearningPersExpPath)
export(Train.QLearningPersExpPath)
export(Train.RFWager)
export(Train.RNN)
export(Train.XGBoost)
export(Update.Evaluator.QLearningPersExpPath)
export(Update.Familiarity.Model.QLearningPersExpPath)
export(Update.Memory.QLearningPersExpPath)
export(Update.Phi.Table)
export(Update.Phi.Table.Memory)
export(Update.Surprise.Model.QLearningPersExpPath)
export(Weighted.Discount)
export(Worker.A3C)
export(compare.exploration)
export(contrite.tit.for.tat)
export(contrite.tit.for.tat.Axelrod)
export(counter.contrite.tit.for.tat)
export(counter.grim.trigger)
export(counter.strat.a)
export(counter.strat.c)
export(counter.strat.d)
export(counter.strat.e)
export(counter.strat.f)
export(counter.strat.g)
export(counter.strat.h)
export(counter.strat.i)
export(fix.price.loc)
export(generous.tit.for.tat)
export(get.against.itself.benchmark)
export(get.antistrat)
export(get.benchmark)
export(get.conversion)
export(grim.trigger)
export(hyperpar.tree)
export(my.split.expressions)
export(net.nice.minus1)
export(net.nice.start1)
export(net.nice0)
export(net.nice1)
export(pavlov)
export(prep.data.4.shiny)
export(redim.state)
export(smooth.average)
export(smooth.triangle)
export(strat.a)
export(strat.b)
export(strat.c)
export(strat.d)
export(strat.e)
export(strat.f)
export(strat.g)
export(strat.h)
export(strat.i)
export(to.binary)
import(StratTourn)
import(XML)
import(abind)
import(future)
import(ggplot2)
import(grf)
import(keras)
import(nnet)
import(parallel)
import(restorepoint)
import(rpart)
import(rpart.plot)
import(tictoc)
import(xgboost)
